import React, { Component } from 'react';
import {
  polygon as TurfPolygon,
  point as TurfPoint,
  featureCollection as FeatureCollection,
} from 'turf';
import { MdPeopleOutline } from 'react-icons/md';
import { FaTimes } from 'react-icons/fa';
import { AddNamePlateLayer, LayerIds, AddPolygonLayer } from 'tuyun-utils';
export default class ShowMessage extends Component {
  state = {
    visible: false,
  };

  componentDidMount = () => {
    this._loadLayer();
  };

  render() {
    const { visible } = this.state;
    if (!visible) return null;
    const { x, y } = _MAP_.project([116.992489, 36.663999]);
    return (
      <div
        style={{ top: (y | 0) + 10, left: (x | 0) + 10 }}
        className="podata-popup"
      >
        <div className="popup-title">
          <MdPeopleOutline className="icon-left" />
          <div className="title-text">人员信息</div>
          <FaTimes className="close" onClick={this._closePopup} />
        </div>

        <ul className="popup-detail">
          <li>
            <div>姓 名: 王 维</div>
          </li>
          <li>性 别：男</li>
          <li>年 龄: 34</li>
          <li>身 份 证 号: 345642194010214251</li>
          <li>联 系 电 话: 13456213547</li>
          <li>居 住 地 址：X大厦15楼1515</li>
          <li>标 签: 吸毒，无业</li>
        </ul>
      </div>
    );
  }

  _loadLayer = () => {
    _MAP_.on('load', () => {
      const duration = 2 * 1000;
      _MAP_.flyTo({
        zoom: 17,
        duration: duration,
        center: [116.99248913367315, 36.66327902595104],
      });
      setTimeout(() => {
        this.setState({ visible: true });
        this._addNameLayer();
        this._addFloorLayer();
      }, 4000);
    });
  };

  _addNameLayer = () => {
    const _features = TurfPoint([116.992489, 36.664099], {
      code: 1,
    });
    const _geoJSONData = {
      type: 'geojson',
      data: FeatureCollection([_features]),
    };
    AddNamePlateLayer(_MAP_, _geoJSONData, LayerIds.hyNameLayer.namePlate); // 添加铭牌
  };

  _addFloorLayer = () => {
    const res = [
      [
        [116.992668, 36.663468],
        [116.992669, 36.663468],
        [116.992671, 36.663468],
        [116.992673, 36.663467],
        [116.992674, 36.663466],
        [116.992675, 36.663465],
        [116.992676, 36.663463],
        [116.992677, 36.663462],
        [116.992677, 36.66346],
        [116.992691, 36.663336],
        [116.992691, 36.663334],
        [116.992691, 36.663332],
        [116.99269, 36.66333],
        [116.992689, 36.663329],
        [116.992688, 36.663328],
        [116.992686, 36.663327],
        [116.992685, 36.663326],
        [116.992683, 36.663326],
        [116.992613, 36.66332],
        [116.992616, 36.66329],
        [116.992687, 36.663295],
        [116.992689, 36.663295],
        [116.99269, 36.663295],
        [116.992692, 36.663294],
        [116.992693, 36.663293],
        [116.992694, 36.663292],
        [116.992695, 36.66329],
        [116.992696, 36.663289],
        [116.992696, 36.663287],
        [116.992702, 36.663235],
        [116.992702, 36.663233],
        [116.992702, 36.663231],
        [116.992701, 36.663229],
        [116.9927, 36.663228],
        [116.992699, 36.663227],
        [116.992697, 36.663226],
        [116.992696, 36.663225],
        [116.992694, 36.663225],
        [116.992624, 36.66322],
        [116.992637, 36.663095],
        [116.992637, 36.663094],
        [116.992637, 36.663092],
        [116.992636, 36.66309],
        [116.992635, 36.663089],
        [116.992634, 36.663087],
        [116.992632, 36.663086],
        [116.992631, 36.663086],
        [116.992629, 36.663086],
        [116.992393, 36.663068],
        [116.992391, 36.663068],
        [116.99239, 36.663069],
        [116.992388, 36.663069],
        [116.992387, 36.66307],
        [116.992385, 36.663071],
        [116.992384, 36.663073],
        [116.992384, 36.663074],
        [116.992383, 36.663076],
        [116.99237, 36.663194],
        [116.992311, 36.66319],
        [116.992309, 36.66319],
        [116.992307, 36.66319],
        [116.992306, 36.663191],
        [116.992304, 36.663192],
        [116.992303, 36.663193],
        [116.992302, 36.663195],
        [116.992301, 36.663196],
        [116.992301, 36.663198],
        [116.992296, 36.663257],
        [116.992296, 36.663258],
        [116.992296, 36.66326],
        [116.992297, 36.663262],
        [116.992298, 36.663263],
        [116.992299, 36.663265],
        [116.992301, 36.663266],
        [116.992302, 36.663266],
        [116.992304, 36.663266],
        [116.992361, 36.663271],
        [116.992357, 36.663301],
        [116.992286, 36.663296],
        [116.992285, 36.663296],
        [116.992283, 36.663296],
        [116.992281, 36.663297],
        [116.99228, 36.663298],
        [116.992279, 36.663299],
        [116.992278, 36.663301],
        [116.992277, 36.663302],
        [116.992277, 36.663304],
        [116.992263, 36.663429],
        [116.992263, 36.663431],
        [116.992263, 36.663432],
        [116.992264, 36.663434],
        [116.992265, 36.663435],
        [116.992266, 36.663437],
        [116.992268, 36.663438],
        [116.992269, 36.663438],
        [116.992271, 36.663439],
        [116.992418, 36.66345],
        [116.99242, 36.66345],
        [116.992422, 36.663449],
        [116.992423, 36.663448],
        [116.992425, 36.663448],
        [116.992426, 36.663446],
        [116.992427, 36.663445],
        [116.992427, 36.663443],
        [116.992428, 36.663442],
        [116.992431, 36.66341],
        [116.992515, 36.663416],
        [116.992511, 36.663447],
        [116.992511, 36.663449],
        [116.992511, 36.663451],
        [116.992512, 36.663452],
        [116.992513, 36.663454],
        [116.992514, 36.663455],
        [116.992516, 36.663456],
        [116.992518, 36.663457],
        [116.992519, 36.663457],
        [116.992668, 36.663468],
      ],
    ];
    const _features = TurfPolygon(res);
    const _geoJSONData = {
      type: 'geojson',
      data: FeatureCollection([_features]),
    };
    _MAP_.addLayer({
      id: LayerIds.hyNameLayer.floorPlate,
      source: _geoJSONData,
      type: 'fill-extrusion',
      paint: {
        'fill-extrusion-color': '#f00',
        'fill-extrusion-height': 50,
        'fill-extrusion-base': 47,
        'fill-extrusion-opacity': 1,
      },
    });
  };

  _closePopup = () => {
    this.setState({ visible: false });
  };
}
